{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACiCC,UAAUH,GAD3C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYtBgB,EA1BM,WAAO,IAAD,EAGazC,mBAAS,CAAC,SAHvB,mBAGhBQ,EAHgB,KAGJT,EAHI,KAKvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCfjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7ad5103.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ) {\n            setCategories( categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ handleInputChange } \n            ></input>\n        </form>\n    )\n\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jXPa1Xn6bSKj12qDMSuzZdsXz8rirvGZ`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\n\n            <div className='card-grid'>\n                {\n                    images.map( img => \n                        <GifGridItem \n                            key={img.id}\n                            {...img} \n                        /> \n                    )\n                }\n            </div> \n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [category]) \n\n    return state;\n\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['Hola']);\n\n    return ( \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid \n                            category={category}\n                            key={category}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    );\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}